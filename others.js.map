{"version":3,"file":"others.js","sourceRoot":"","sources":["src/others.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,IAAI,MAAM,GAAG;IAEhB,aAAa,EAAE,UAAU,IAAgB;QACrC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,eAAe,CAAC,GAAQ;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,aAAa,CAAC,KAAa;QACvB,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,qBAAqB,CAAC,KAAa,EAAE,IAAY;QAC7C,IAAI,WAAW,GAAW,CAAC,CAAC;QAC5B,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;YACxD,IAAI,IAAI,IAAI,OAAO,EAAE;gBACjB,WAAW,GAAG,KAAK,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,WAAW,CAAC;IACvB,CAAC;CACJ,CAAA","sourcesContent":["export let others = {\r\n\r\n    duplicateList: function (list: Array<any>): Array<any> {\r\n        return [...list];\r\n    },\r\n\r\n    duplicateObject(obj: any): any {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    },\r\n\r\n    reverseString(value: string): string {\r\n        return [...value].reverse().join('');\r\n    },\r\n    \r\n    getLastCharacterIndex(value: string, char: string): number {\r\n        let lastElement: number = 0;\r\n        [...others.reverseString(value)].forEach((element, index) => {\r\n            if (char == element) {\r\n                lastElement = index;\r\n            }\r\n        });\r\n        return lastElement;\r\n    }\r\n}"]}