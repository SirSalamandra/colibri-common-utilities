{"version":3,"file":"formatters.js","sourceRoot":"","sources":["../src/formatters.ts"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,cAAc,CAAC;AACtC,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,MAAM,UAAU,GAAG;IAEjB,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,KAAK,CAAC;SACd;QACD,IAAI,KAAK,GAAkB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACrE,KAAK,CAAC,OAAO,CAAC,CAAC,OAAe,EAAE,EAAE;YAChC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,cAAc,CAAC,QAAgB;QAC7B,IAAI,KAAK,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3C,OAAO,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,KAAK,GAAkB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3C,OAAO,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,KAAK,GAAkB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3C,OAAO,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,mBAAmB,CAAC,KAAa;QAC/B,OAAO,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,qBAAqB,EAAE,CAAC,EAAE,qBAAqB,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,IAAI,WAAW,GAAW,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvD,IAAI,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE;YAC3B,OAAO,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACnC;aACI;YACH,OAAO,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAClC;IACH,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,WAAW,GAAW,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAkB,EAAE,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACzC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACtF,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,kBAAkB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACxE,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAClE,OAAO,EAAE,CAAC;SACX;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,KAAa;QACnB,IAAI,YAAY,GAAW,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,WAAW,GAAW,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAkB,EAAE,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACtE,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,kBAAkB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACxE,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAClE,OAAO,EAAE,CAAC;SACX;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,KAAK;YACR,OAAO,KAAK,CAAC;QACf,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAClC,IAAI,KAAK,GAAkB,EAAE,CAAC;QAC9B,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAChD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAChD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAChD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QACjD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAClD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClF,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,OAAO,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjC;aACI;YACH,OAAO,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjC;IACH,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,IAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAChD,IAAI,WAAW,GAAW,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAkB,EAAE,CAAC;QAE7B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACzC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAEtE,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,mBAAmB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACzE,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAClE,OAAO,EAAE,CAAC;SACX;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,IAAI,cAAc,GAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC/C,IAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAClD,IAAI,WAAW,GAAW,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAkB,EAAE,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACtE,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,mBAAmB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACzE,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YAC3G,OAAO,EAAE,CAAC;SACX;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,SAAS,CAAC,KAAa;QACrB,IAAI,YAAY,GAAW,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,WAAW,GAAW,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAkB,EAAE,CAAC;QAC7B,IAAI,mBAAmB,GAAW,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1E,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAEvD,WAAW,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACnD,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,kBAAkB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QAExE,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAClE,OAAO,EAAE,CAAC;SACX;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,KAAa;QACnB,IAAI,YAAY,GAAW,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,WAAW,GAAW,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAkB,EAAE,CAAC;QAE7B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACtC,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,kBAAkB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACxE,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAClE,OAAO,EAAE,CAAC;SACX;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,IAAI,CAAC,IAAI;YACP,OAAO,IAAI,CAAC;QACd,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,OAAO,GAAW,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3C,IAAI,UAAU,GAAW,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,IAAI,WAAW,GAAW,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,IAAI,YAAY,GAAW,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACrC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SAC3C;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACrC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SAC3C;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACrC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SAC3C;QACD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YACtC,OAAO,OAAO,CAAC,WAAW,EAAE,CAAC;SAC9B;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAC7E,OAAO,CAAC,OAAO,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC;SACnD;QAED,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE;YAC3C,OAAO,CAAC,OAAO,GAAG,GAAG,GAAG,UAAU,GAAG,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC;SACjE;aACI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE;YAChD,OAAO,CAAC,OAAO,GAAG,GAAG,GAAG,UAAU,GAAG,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;SAC9F;aACI;YACH,OAAO,CAAC,OAAO,GAAG,GAAG,GAAG,UAAU,GAAG,WAAW,GAAG,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;SAChF;IACH,CAAC;CACF,CAAA;AAED,SAAS,mBAAmB,CAAC,GAAW;IACtC,IAAI,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAChC,IAAI,WAAW,GAAW,CAAC,CAAC;IAC5B,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;QAClC,IAAI,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACtE,WAAW,GAAG,KAAK,CAAC;SACrB;IACH,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,SAAS,kBAAkB,CAAC,KAAa;IACvC,IAAI,WAAW,GAAW,CAAC,CAAC;IAC5B,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1C,IAAI,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE;YAC9C,WAAW,GAAG,CAAC,CAAC;YAChB,MAAM;SACP;KACF;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AAAA,CAAC;AAEF,eAAe,UAAU,CAAC","sourcesContent":["import Converters from './converters';\r\nimport Validations from './validations';\r\n\r\nconst Formatters = {\r\n\r\n  removeMask(value: string): string {\r\n    if (!value) {\r\n      return value;\r\n    }\r\n    let chars: Array<string> = [\".\", \",\", \"-\", \"/\", \"\\\\\", \"(\", \")\", \" \"];\r\n    chars.forEach((element: string) => {\r\n      value = value.replaceAll(element, \"\");\r\n    });\r\n    return value;\r\n  },\r\n\r\n  formatDateTime(dateTime: string): string {\r\n    let value = dateTime.toString().split(\"T\");\r\n    return Formatters.formatDate(value[0]) + \" \" + Formatters.formatTime(value[1]);\r\n  },\r\n\r\n  formatDate(date: string): string {\r\n    let value: Array<string> = date.split(\"-\");\r\n    return value[2] + \"/\" + value[1] + \"/\" + value[0];\r\n  },\r\n\r\n  formatTime(time: string): string {\r\n    let value: Array<string> = time.split(\":\");\r\n    return value[0] + \":\" + value[1] + \":\" + Converters.getNumbers(value[2]);\r\n  },\r\n\r\n  formatDecimalNumber(value: number): string {\r\n    return value.toLocaleString(\"pt-br\", { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n  },\r\n\r\n  cpfCnpjMask(value: string): string {\r\n    let valueNumber: string = Converters.getNumbers(value);\r\n    if (valueNumber.length > 11) {\r\n      return Formatters.cnpjMask(value);\r\n    }\r\n    else {\r\n      return Formatters.cpfMask(value);\r\n    }\r\n  },\r\n\r\n  cnpjMask(value: string): string {\r\n    let valueNumber = Converters.getNumbers(value);\r\n    let valueMasked: string = \"\";\r\n    let part: Array<string> = [];\r\n    part.push(valueNumber.substring(0, 2));\r\n    part.push(valueNumber.substring(2, 5));\r\n    part.push(valueNumber.substring(5, 8));\r\n    part.push(valueNumber.substring(8, 12));\r\n    part.push(valueNumber.substring(12, 14));\r\n    valueMasked = part[0] + \".\" + part[1] + \".\" + part[2] + \"/\" + part[3] + \"-\" + part[4];\r\n    valueMasked = valueMasked.slice(0, getLastNumberIndex(valueMasked) + 1);\r\n    if (valueMasked.length == 1 && !Validations.isNumeric(valueMasked)) {\r\n      return \"\";\r\n    }\r\n    return valueMasked;\r\n  },\r\n\r\n  cpfMask(value: string): string {\r\n    let valueNumbers: string = Converters.getNumbers(value);\r\n    let valueMasked: string = \"\";\r\n    let part: Array<string> = [];\r\n    part.push(valueNumbers.substring(0, 3));\r\n    part.push(valueNumbers.substring(3, 6));\r\n    part.push(valueNumbers.substring(6, 9));\r\n    part.push(valueNumbers.substring(9));\r\n    valueMasked = part[0] + \".\" + part[1] + \".\" + part[2] + \"-\" + part[3];\r\n    valueMasked = valueMasked.slice(0, getLastNumberIndex(valueMasked) + 1);\r\n    if (valueMasked.length == 1 && !Validations.isNumeric(valueMasked)) {\r\n      return \"\";\r\n    }\r\n    return valueMasked;\r\n  },\r\n\r\n  chassiMask(value: string): string {\r\n    if (!value)\r\n      return value;\r\n    value = value.replaceAll(\" \", \"\");\r\n    let parts: Array<string> = [];\r\n    parts.push(value.substring(0, 1).toUpperCase());\r\n    parts.push(value.substring(1, 3).toUpperCase());\r\n    parts.push(value.substring(3, 9).toUpperCase());\r\n    parts.push(value.substring(9, 10).toUpperCase());\r\n    parts.push(value.substring(10, 17).toUpperCase());\r\n    return parts.filter(p => p != null && p != undefined && p.length > 0).join(\" \");\r\n  },\r\n\r\n  ieRgMask(value: string): string {\r\n    let valueNumber = value.replace(/[^0-9xX]/g, '');\r\n    if (valueNumber.length > 9) {\r\n      return Formatters.ieMask(value);\r\n    }\r\n    else {\r\n      return Formatters.rgMask(value);\r\n    }\r\n  },\r\n\r\n  ieMask(value: string): string {\r\n    let valueNumbers = value.replace(/[^0-9]/g, '');\r\n    let valueMasked: string = \"\";\r\n    let part: Array<string> = [];\r\n\r\n    part.push(valueNumbers.substring(0, 3));\r\n    part.push(valueNumbers.substring(3, 6));\r\n    part.push(valueNumbers.substring(6, 9));\r\n    part.push(valueNumbers.substring(9, 12));\r\n    valueMasked = part[0] + \".\" + part[1] + \".\" + part[2] + \".\" + part[3];\r\n\r\n    valueMasked = valueMasked.slice(0, getLatestNumberIERG(valueMasked) + 1);\r\n    if (valueMasked.length == 1 && !Validations.isNumeric(valueMasked)) {\r\n      return \"\";\r\n    }\r\n    return valueMasked;\r\n  },\r\n\r\n  rgMask(value: string): string {\r\n    let allowedLetters: Array<string> = [\"x\", \"X\"];\r\n    let valueNumbers = value.replace(/[^0-9xX]/g, '');\r\n    let valueMasked: string = \"\";\r\n    let part: Array<string> = [];\r\n    part.push(valueNumbers.substring(0, 2));\r\n    part.push(valueNumbers.substring(2, 5));\r\n    part.push(valueNumbers.substring(5, 8));\r\n    part.push(valueNumbers.substring(8, 9));\r\n    valueMasked = part[0] + \".\" + part[1] + \".\" + part[2] + \"-\" + part[3];\r\n    valueMasked = valueMasked.slice(0, getLatestNumberIERG(valueMasked) + 1);\r\n    if (valueMasked.length == 1 && !Validations.isNumeric(valueMasked) && !allowedLetters.includes(valueMasked)) {\r\n      return \"\";\r\n    }\r\n    return valueMasked;\r\n  },\r\n\r\n  phoneMask(value: string): string {\r\n    let valueNumbers: string = Converters.getNumbers(value);\r\n    let valueMasked: string = \"\";\r\n    let part: Array<string> = [];\r\n    let indexToPutSeparator: number = 6 + (valueNumbers.length >= 11 ? 1 : 0);\r\n\r\n    part.push(valueNumbers.substring(0, 2));\r\n    part.push(valueNumbers.substring(2, indexToPutSeparator));\r\n    part.push(valueNumbers.substring(indexToPutSeparator));\r\n\r\n    valueMasked = `(${part[0]}) ${part[1]}-${part[2]}`;\r\n    valueMasked = valueMasked.slice(0, getLastNumberIndex(valueMasked) + 1);\r\n\r\n    if (valueMasked.length == 1 && !Validations.isNumeric(valueMasked)) {\r\n      return \"\";\r\n    }\r\n\r\n    return valueMasked;\r\n  },\r\n\r\n  cepMask(value: string): string {\r\n    let valueNumbers: string = Converters.getNumbers(value);\r\n    let valueMasked: string = \"\";\r\n    let part: Array<string> = [];\r\n\r\n    part.push(valueNumbers.substring(0, 5));\r\n    part.push(valueNumbers.substring(5, 8));\r\n    valueMasked = part[0] + \"-\" + part[1];\r\n    valueMasked = valueMasked.slice(0, getLastNumberIndex(valueMasked) + 1);\r\n    if (valueMasked.length == 1 && !Validations.isNumeric(valueMasked)) {\r\n      return \"\";\r\n    }\r\n    return valueMasked;\r\n  },\r\n\r\n  licensePlateMask(text: string): string {\r\n    if (!text)\r\n      return text;\r\n    text = Formatters.removeMask(text);\r\n    let letters: string = text.substring(0, 3);\r\n    let firstDigit: string = text.substring(3, 4);\r\n    let secondDigit: string = text.substring(4, 5);\r\n    let remainDigits: string = text.substring(5, 7);\r\n    if (!Validations.isLetter(letters[0])) {\r\n      return text.substring(0, 0).toUpperCase();\r\n    }\r\n    if (!Validations.isLetter(letters[1])) {\r\n      return text.substring(0, 1).toUpperCase();\r\n    }\r\n    if (!Validations.isLetter(letters[2])) {\r\n      return text.substring(0, 2).toUpperCase();\r\n    }\r\n    if (!Validations.isNumeric(firstDigit)) {\r\n      return letters.toUpperCase();\r\n    }\r\n    if (!Validations.isLetter(secondDigit) && !Validations.isNumeric(secondDigit)) {\r\n      return (letters + \"-\" + firstDigit).toUpperCase();\r\n    }\r\n\r\n    if (!Validations.isNumeric(remainDigits[0])) {\r\n      return (letters + \"-\" + firstDigit + secondDigit).toUpperCase();\r\n    }\r\n    else if (!Validations.isNumeric(remainDigits[1])) {\r\n      return (letters + \"-\" + firstDigit + secondDigit + remainDigits[0].toString()).toUpperCase();\r\n    }\r\n    else {\r\n      return (letters + \"-\" + firstDigit + secondDigit + remainDigits).toUpperCase();\r\n    }\r\n  },\r\n}\r\n\r\nfunction getLatestNumberIERG(txt: string) {\r\n  let allowedLetters = [\"x\", \"X\"];\r\n  let lastElement: number = 0;\r\n  [...txt].forEach((element, index) => {\r\n    if (Validations.isNumeric(element) || allowedLetters.includes(element)) {\r\n      lastElement = index;\r\n    }\r\n  });\r\n  return lastElement;\r\n}\r\n\r\nfunction getLastNumberIndex(value: string): number {\r\n  let lastElement: number = 0;\r\n  for (let i = value.length - 1; i >= 0; i--) {\r\n    if (Validations.isNumeric(value[i].toString())) {\r\n      lastElement = i;\r\n      break;\r\n    }\r\n  }\r\n  return lastElement;\r\n};\r\n\r\nexport default Formatters;"]}